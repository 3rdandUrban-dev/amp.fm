<?xml version="1.0"?>
<!--
    COPYRIGHT: (c) 2006 by M. David Peterson
    LICENSE: The code contained in this file is licensed under the Creative Commons Attribution-Share Alike 3.0. 
    Please see http://creativecommons.org/licenses/by-sa/3.0/ for specific detail.
-->
<configuration>
  <configSections>
    <sectionGroup name="Xameleon.WebApp">
      <section name="xameleon" type="Nuxleus.Configuration.AspNetXameleonConfiguration,Nuxleus.Core" />
      <section name="memcached" type="Nuxleus.Configuration.AspNetMemcachedConfiguration,Nuxleus.Core" />
      <section name="queueserver" type="Nuxleus.Configuration.AspNetQueueServerConfiguration,Nuxleus.Core" />
    </sectionGroup>
    <sectionGroup name="mono.aspnet">
      <section name="acceptEncoding" type="Mono.Http.Configuration.AcceptEncodingSectionHandler, Mono.Http, Version=1.0.5000.0, PublicKeyToken=0738eb9f132ed756" />
    </sectionGroup>
  </configSections>
  <Xameleon.WebApp>
    <xameleon debugMode="no" useMemcached="no" defaultEngine="Saxon" objectHashKey="1234567890">
      <baseSettings baseXsltName="base" />
      <preCompiledXslt base-uri="~">
        <add useAsBaseXslt="yes" name="precompile-atomictalk" base-uri="~" uri="/service/transform/atomictalk.base.xslt" />
      </preCompiledXslt>
      <globalXsltParams />
      <sessionXsltParams />
      <httpContextXsltParams />
      <requestXsltParams />
    </xameleon>
    <memcached useCompression="no">
      <poolConfig initConnections="5" minConnections="5" maxConnections="1024" socketConnectTimeout="1000" socketConnect="3000" maintenanceSleep="30" failover="true" nagle="true" />
      <server>
        <add name="localhost" ip="127.0.0.1" port="11211" />
      </server>
    </memcached>
    <queueserver ip="127.0.0.1" port="9876" poolSize="5" threshold="10" />
  </Xameleon.WebApp>
 <!-- <mono.aspnet>
    <acceptEncoding>
      <add encoding="gzip" type="Mono.Http.GZipWriteFilter, Mono.Http, Version=1.0.5000.0, PublicKeyToken=0738eb9f132ed756" disabled="yes" />
    </acceptEncoding>
  </mono.aspnet>-->
  <appSettings>
    <add key="MonoServerDefaultIndexFiles" value="index.page,service.op,default.omx,index.xml,index.aspx,default.aspx,index.html,default.asmx" />
    <add key="Basic.Users" value="../users.xml" />
    <add key="Basic.Realm" value="amp.fm development" />
  </appSettings>
  <system.web>
    <httpHandlers>
      <add verb="GET,HEAD" path="*.xsl" type="Nuxleus.Web.HttpHandler.NuxleusHttpAysncStaticFileHandler" />
      <add verb="GET,HEAD" path="*.xslt" type="Nuxleus.Web.HttpHandler.NuxleusHttpAysncStaticFileHandler" />
      <add verb="GET,HEAD" path="*.xml" type="Nuxleus.Web.HttpHandler.NuxleusHttpAysncStaticFileHandler" />
      <add verb="GET,HEAD" path="*.css" type="Nuxleus.Web.HttpHandler.NuxleusHttpAysncStaticFileHandler" />
      <add verb="GET,HEAD" path="*.js" type="Nuxleus.Web.HttpHandler.NuxleusHttpAysncStaticFileHandler" />
      <add path="*.page" verb="GET,HEAD" type="Nuxleus.Web.HttpHandler.NuxleusHttpAsyncXmlServiceOperationHandler"/>
      <add path="/service/account/manage/*.op" verb="GET,HEAD,PUT,POST,DELETE" type="Nuxleus.Web.HttpHandler.NuxleusHttpAccountManagementServiceOperationHandler"/>
      <add path="/service/account/create/*.op" verb="POST" type="Nuxleus.Web.HttpHandler.NuxleusHttpAccountCreationServiceOperationHandler"/>
      <add path="/service/event/delete/*.op" verb="GET,POST,DELETE" type="Nuxleus.Web.HttpHandler.NuxleusHttpDeleteEventServiceOperationHandler"/>
      <add path="/service/event/create/*.op" verb="POST" type="Nuxleus.Web.HttpHandler.NuxleusHttpEventCreationServiceOperationHandler"/>
      <add path="/service/event/return-events-by-user/*.op" verb="GET,HEAD" type="Nuxleus.Web.HttpHandler.NuxleusHttpEventListingServiceOperationHandler"/>
      <add path="/service/media/create/*.op" verb="*" type="Nuxleus.Web.HttpHandler.NuxleusHttpMediaCreationServiceOperationHandler"/>
      <add path="/service/media/return-media-files-by-user/*.op" verb="GET,HEAD" type="Nuxleus.Web.HttpHandler.NuxleusHttpMediaListingServiceOperationHandler"/>
      <add path="/service/session/*.op" verb="GET,HEAD" type="Nuxleus.Web.HttpHandler.NuxleusHttpSessionManagementServiceOperationHandler"/>
      <add path="/service/account/login/*.op" verb="GET,HEAD,PUT,POST" type="Nuxleus.Web.HttpHandler.NuxleusHttpAccountLoginServiceOperationHandler"/>
      <add path="/service/account/logout/*.op" verb="GET,HEAD" type="Nuxleus.Web.HttpHandler.NuxleusHttpSessionLogoutHandler"/>
      <add path="/service/collection/create/*.op" verb="GET,HEAD,PUT,POST" type="Nuxleus.Web.HttpHandler.NuxleusHttpMediaCollectionCreationServiceOperationHandler"/>
      <add path="/service/collection/return-collections-by-user/*.op" verb="GET,HEAD" type="Nuxleus.Web.HttpHandler.NuxleusHttpCollectionListingServiceOperationHandler"/>
      <add path="*.op" verb="GET,HEAD,PUT,POST,DELETE" type="Nuxleus.Web.HttpHandler.NuxleusHttpAsyncXmlServiceOperationHandler"/>
      <add path="*" verb="GET,HEAD,PUT,POST,DELETE" type="Nuxleus.Web.HttpHandler.NuxleusHttpNotFoundHandler"/>
    </httpHandlers>
    <httpModules>
      <remove name="FormsAuthentication" />
      <remove name="OutputCache" />
      <remove name="Session" />
      <remove name="WindowsAuthentication" />
      <remove name="PassportAuthentication" />
      <remove name="UrlAuthorization" />
      <remove name="FileAuthorization" />
      <add name="AcceptEncodingModule" type="Mono.Http.Modules.AcceptEncodingModule, Mono.Http, Version=1.0.5000.0, PublicKeyToken=0738eb9f132ed756" />
      <add name="BasicAuthenticationModule" type="Mono.Http.Modules.BasicAuthenticationModule, Mono.Http, Version=1.0.5000.0, PublicKeyToken=0738eb9f132ed756" />
      <!-- <add name="AsyncRequestLogHttpModule" type="Xameleon.HttpModule.AsyncRequestLogHttpModule,Xameleon" /> -->
    </httpModules>
    <sessionState mode="Off" />
    <customErrors mode="Off" />
    <compilation debug="true" />
    <httpRuntime executionTimeout="30"  maxRequestLength="10240" />
  </system.web>
</configuration>
